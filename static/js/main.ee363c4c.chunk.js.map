{"version":3,"sources":["images sync /.svg$","images/hiragana-a.svg","images/hiragana-e.svg","images/hiragana-i.svg","images/hiragana-ka.svg","images/hiragana-ke.svg","images/hiragana-ki.svg","images/hiragana-ko.svg","images/hiragana-ku.svg","images/hiragana-o.svg","images/hiragana-u.svg","images/katakana-a.svg","hiragana.js","katakana.js","utils.js","question/question.js","question/image.js","question/buttons.js","App.js","title/mode-selector.js","feedback/counter.js","serviceWorker.js","index.js"],"names":["map","./hiragana-a.svg","./hiragana-e.svg","./hiragana-i.svg","./hiragana-ka.svg","./hiragana-ke.svg","./hiragana-ki.svg","./hiragana-ko.svg","./hiragana-ku.svg","./hiragana-o.svg","./hiragana-u.svg","./katakana-a.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","hiragana","imgPath","name","family","katakana","generateRandomNumber","min","max","Math","floor","random","Question","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectKana","list","mode","concat","randomNumber","length","setState","selectedKana","onClickCorrect","incrementCorrect","onClickIncorrect","incrementIncorrect","state","undefined","renderContent","react_default","a","createElement","className","imagePath","reqSvgs","require","src","fetchKanaImage","selected","options","correctOption","onClick","option","push","insert","generateAnswerButtons","Component","App","setMode","selectedMode","correct","incorrect","_this$state","question_Question","displayScore","console","log","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee363c4c.chunk.js","sourcesContent":["var map = {\n\t\"./hiragana-a.svg\": 24,\n\t\"./hiragana-e.svg\": 25,\n\t\"./hiragana-i.svg\": 26,\n\t\"./hiragana-ka.svg\": 27,\n\t\"./hiragana-ke.svg\": 28,\n\t\"./hiragana-ki.svg\": 29,\n\t\"./hiragana-ko.svg\": 30,\n\t\"./hiragana-ku.svg\": 31,\n\t\"./hiragana-o.svg\": 32,\n\t\"./hiragana-u.svg\": 33,\n\t\"./katakana-a.svg\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/hiragana-a.e10e4084.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-e.cb188bc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-i.9273d89a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-ka.cdf9c2e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-ke.14eb94eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-ki.d4c6129b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-ko.3dac2be1.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-ku.d1ebab0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-o.f1a6a6d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiragana-u.dd231153.svg\";","module.exports = __webpack_public_path__ + \"static/media/katakana-a.4c3274ca.svg\";","export default [\r\n  {\r\n    id: 'hiragana-a',\r\n    imgPath: './hiragana-a.svg',\r\n    name: 'a',\r\n    family: 'vowel',\r\n  },\r\n  {\r\n    id: 'hiragana-i',\r\n    imgPath: './hiragana-i.svg',\r\n    name: 'i',\r\n    family: 'vowel',\r\n  },\r\n  {\r\n    id: 'hiragana-u',\r\n    imgPath: './hiragana-u.svg',\r\n    name: 'u',\r\n    family: 'vowel',\r\n  },\r\n  {\r\n    id: 'hiragana-e',\r\n    imgPath: './hiragana-e.svg',\r\n    name: 'e',\r\n    family: 'vowel',\r\n  },\r\n  {\r\n    id: 'hiragana-o',\r\n    imgPath: './hiragana-o.svg',\r\n    name: 'o',\r\n    family: 'vowel',\r\n  },\r\n  {\r\n    id: 'hiragana-ka',\r\n    imgPath: './hiragana-ka.svg',\r\n    name: 'ka',\r\n    family: 'K',\r\n  },\r\n  {\r\n    id: 'hiragana-ki',\r\n    imgPath: './hiragana-ki.svg',\r\n    name: 'ki',\r\n    family: 'K',\r\n  },\r\n  {\r\n    id: 'hiragana-ku',\r\n    imgPath: './hiragana-ku.svg',\r\n    name: 'ku',\r\n    family: 'K',\r\n  },\r\n  {\r\n    id: 'hiragana-ke',\r\n    imgPath: './hiragana-ke.svg',\r\n    name: 'ke',\r\n    family: 'K',\r\n  },\r\n  {\r\n    id: 'hiragana-ko',\r\n    imgPath: './hiragana-ko.svg',\r\n    name: 'ko',\r\n    family: 'K',\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    id: 'katakana-a',\r\n    imgPath: './katakana-a.svg',\r\n    name: 'a',\r\n    family: 'vowel',\r\n  },\r\n]","export const generateRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n","import React, { Component } from 'react';\r\nimport { concat } from 'ramda';\r\nimport hiragana from '../hiragana'\r\nimport katakana from '../katakana'\r\nimport { generateRandomNumber } from '../utils';\r\nimport generateAnswerButtons from './buttons'\r\nimport fetchKanaImage from './image'\r\nimport './question.css'\r\n\r\nexport default class Question extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedKana: undefined,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.selectKana();\r\n  }\r\n\r\n  selectKana = () => {\r\n    let list;\r\n    switch (this.props.mode) {\r\n      case 'hiragana':\r\n        list = hiragana;\r\n        break;\r\n      case 'katakana':\r\n        list = katakana;\r\n        break;\r\n      default:\r\n        list = concat(hiragana, katakana);\r\n        break;\r\n    }\r\n    const randomNumber = generateRandomNumber(0, list.length);\r\n    this.setState({ selectedKana: list[randomNumber]});\r\n  }\r\n\r\n  onClickCorrect = () => {\r\n    this.props.incrementCorrect();\r\n    this.selectKana();\r\n  }\r\n\r\n  onClickIncorrect = () => {\r\n    this.props.incrementIncorrect();\r\n    this.selectKana();\r\n  }\r\n\r\n  render() {\r\n    const { selectedKana } = this.state;\r\n    let renderContent = <div>loading</div>;\r\n    if (selectedKana) {\r\n      renderContent = (\r\n        <div className='question'>\r\n        {fetchKanaImage(selectedKana.imgPath)}\r\n        <div className='question__buttons'>\r\n          {generateAnswerButtons(selectedKana, this.onClickCorrect, this.onClickIncorrect)}\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    return (\r\n      renderContent\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './image.css'\r\n\r\nexport default (imagePath) => {\r\n  const reqSvgs = require.context ( '../images', true, /\\.svg$/ )\r\n  return <img className='kana-image' src={reqSvgs(imagePath)} />\r\n}\r\n\r\n","import React from 'react';\r\nimport { insert } from 'ramda';\r\nimport { generateRandomNumber } from '../utils';\r\nimport hiragana from '../hiragana'\r\nimport './buttons.css';\r\n\r\nexport default (selectedKana, onClickCorrect, onClickIncorrect) => {\r\n    let selected;\r\n    const options = [];\r\n    const correctOption = <button className='answer-button' onClick={() => onClickCorrect()}>{selectedKana.name}</button>\r\n    while (options.length < 2) {\r\n      const randomNumber = generateRandomNumber(0, hiragana.length - 1);\r\n      if (randomNumber !== selected) {\r\n        if (hiragana[randomNumber].id !== selectedKana.id) {\r\n          selected = randomNumber;\r\n          const option = <button className='answer-button' onClick={() => onClickIncorrect()}>{hiragana[randomNumber].name}</button>\r\n          options.push(option);\r\n        }\r\n      }\r\n    }\r\n    return insert(generateRandomNumber(0, 2))(correctOption)(options);\r\n  }","import React, { Component } from 'react';\n\nimport selectMode from './title/mode-selector'\nimport Question from './question/question';\nimport displayScore from './feedback/counter';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: undefined,\n      correct: 0,\n      incorrect: 0,\n    }\n  }\n\n  setMode = (selectedMode) => {\n    this.setState({ mode: selectedMode })\n  }\n\n  incrementCorrect = () =>{\n    this.setState({ correct: this.state.correct + 1 })\n  }\n\n  incrementIncorrect = () => {\n    this.setState({ incorrect: this.state.incorrect + 1 })\n  }\n\n  render() {\n    const { correct, incorrect, mode } = this.state;\n\n    let renderContent = selectMode(this.setMode)\n    if (mode) {\n      renderContent = (\n        <div>\n          <div> ｋａｎａｋａｍａ </div>\n          <div> your kana companion </div>\n          <Question\n            incrementCorrect={this.incrementCorrect}\n            incrementIncorrect={this.incrementIncorrect}\n            mode={mode}\n          />\n          { displayScore(correct, incorrect) }\n        </div>\n      );\n    }\n    console.log(renderContent)\n    return (\n      renderContent\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default (onClick) => {\r\n  return (\r\n    <div>\r\n      <div>What would you like to practice?</div>\r\n      <button onClick={() => onClick('hiragana')}>Hiragana</button>\r\n      <button onClick={() => onClick('katakana')}>Katakana</button>\r\n      <button onClick={() => onClick('all')}>Hiragana and Katakana</button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './counter.css';\r\n\r\nexport default (correct, incorrect) => {\r\n  return (\r\n    <div className='counter'>\r\n      <div className='counter__column'>\r\n        <div>\r\n          Correct:\r\n        </div>\r\n        <div className='counter__score'>\r\n          {correct}\r\n        </div>\r\n      </div>\r\n      <div className='counter__column'>\r\n        <div>\r\n          Incorrect:\r\n        </div>\r\n        <div className='counter__score'>\r\n          {incorrect}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}